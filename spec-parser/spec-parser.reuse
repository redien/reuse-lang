
(pub typ spec-requirement
     (SpecSuccessful string string)
     (SpecFailed string string))

(def collect-lines (first-char lines)
     (string-join (string-of-char 10) (list-map (string-skip 2) (list-filter (pipe string-first (maybe-or-else 0) (= first-char)) lines))))

(def commit-requirement (result)
     (match result
            (Pair lines requirements)
               (Pair (list-empty) (Cons (SpecSuccessful (collect-lines 62 lines) (collect-lines 61 lines)) requirements))))

(def append-line (line result)
     (match result
            (Pair lines requirements)
               (Pair (Cons line lines) requirements)))

(def reduce-spec (line result)
     (match (string-first line)
            (Some 61)
               (commit-requirement (append-line line result))
            _
               (append-line line result)))

(pub def parse-spec (file)
     (list-reverse (pair-right (list-foldl reduce-spec (Pair (list-empty) (list-empty)) (string-split 10 (string-from-slice file))))))
