
(def stringify-type-list (stringify-type types)
     ((pipe (list-map stringify-type)
            (string-join (list 32)))
        types))

(def stringify-type (type)
     (match type
            ErrorType              (data-stringify-type-error)
            (UniversalType name)   name
            (ExistentialType name) (wrap-in-brackets (string-join (data-stringify-space) (list (data-stringify-exists) name)))
            (ConstType name Empty) name
            (ConstType name types)
                ((pipe (stringify-type-list stringify-type)
                       (string-concat (string-concat name (list 32)))
                       wrap-in-brackets)
                    types)
            (FnType argument-types return-type)
                ((pipe (stringify-type-list stringify-type)
                       wrap-in-brackets
                       (string-concat (string-concat (data-stringify-fn) (list 32)))
                       (string-append (Cons 32 (stringify-type return-type)))
                       wrap-in-brackets)
                    argument-types)))

(def stringify-types (types)
     (list-map stringify-type (rename-types types)))
