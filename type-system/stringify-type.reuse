
(def stringify-wrap (string)
     (string-concat (string-of-char 40) (string-concat string (string-of-char 41))))

(def stringify-type-list (stringify-type types)
     (pipe
         types
         (list-map stringify-type)
         (string-join (string-of-char 32))))

(def stringify-type (type)
     (match type
            ErrorType              (data-stringify-type-error)
            (UniversalType name)   name
            (ExistentialType name) (stringify-wrap (string-join (data-stringify-space) (list (data-stringify-exists) name)))
            (ConstType name Empty) name
            (ConstType name types)
                (pipe
                    types
                    (stringify-type-list stringify-type)
                    (string-concat (string-concat name (string-of-char 32)))
                    stringify-wrap)
            (FnType argument-types return-type)
                (pipe
                    argument-types
                    (stringify-type-list stringify-type)
                    stringify-wrap
                    (string-concat (string-append 32 (data-stringify-fn)))
                    (fn (s) (string-concat s (string-prepend 32 (stringify-type return-type))))
                    stringify-wrap)))

(def stringify-types (types)
     (list-map stringify-type (rename-types types)))
