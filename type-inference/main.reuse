
(def stringify-type-list (stringify-type types)
     ((pipe (list-map stringify-type)
            (string-join (list 32)))
        types))

(def stringify-type (type)
     (match type
            ErrorType              (data-type-error)
            (UniversalType name)   name
            (ExistentialType name) (wrap-in-brackets (string-join (data-space) (list (data-exists) name)))
            (ConstType name Empty) name
            (ConstType name types)
                ((pipe (stringify-type-list stringify-type)
                       (string-concat (string-concat name (list 32)))
                       wrap-in-brackets)
                    types)
            (FnType arg-types ret-type)
                ((pipe (stringify-type-list stringify-type)
                       wrap-in-brackets
                       (string-concat (string-concat (data-fn) (list 32)))
                       (string-append (Cons 32 (stringify-type ret-type)))
                       wrap-in-brackets)
                    arg-types)))

(def stringify-definitions (definitions)
     (list-map (fn (definition) (stringify-type (rename-type (definition-type definition)))) definitions))

(export main (stdin)
        (match (result-concat (sexps-to-definitions (parse stdin)))
               (Result definitions)  (string-join (list 32) (stringify-definitions (infer-types definitions)))
               (Error error)         Empty))
