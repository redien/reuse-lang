
(def whitespace? (character)
     (match character
            32
                True
            13
                True
            9
                True
            10
                True
            _
                False))

(def atom-character? (character)
     (match character
            40
                False
            41
                False
            _
                (not (whitespace? character))))

(pub typ range (Range int32 int32))

(pub typ sexp
     (Symbol int32 string range)
     (Integer int32 range)
     (List (list sexp) range))

(pub def sexp-range (sexp)
     (match sexp
            (Symbol _ __ range)
                range
            (Integer _ range)
                range
            (List _ range)
                range))

(pub def sexp-symbol-text (sexp)
     (match sexp
            (Symbol _ text __)
                (Some text)
            _
                None))

(pub typ parse-error
     ParseErrorTooFewClosingBrackets
     ParseErrorTooManyClosingBrackets)

(typ (parser-result symbol value)
     (ParserResult int32 (pair int32 (dictionary symbol)) value)
     (ParserError parse-error)
     (ParserEnd int32))

(def intern-string (index next-index name symbol-state)
     (match symbol-state
            (Pair token symbols)
                (match (dictionary-get name symbols)
                       (Some (Pair token name))
                           (ParserResult
                               next-index
                               symbol-state
                               (Symbol token name (Range index next-index)))
                       None
                           (ParserResult
                               next-index
                               (Pair (+ token 1) (dictionary-set name (Pair token name) symbols))
                               (Symbol token name (Range index next-index))))))

(def parse-symbol (index slice symbols)
     (match (string-collect-from-slice atom-character? index slice)
            (Pair next-index name)
                (match (string-to-int32 name)
                       (Some integer)
                           (ParserResult next-index symbols (Integer integer (Range index next-index)))
                       None
                           (match (string-is-empty? name)
                                  False
                                      (intern-string index next-index name symbols)
                                  True
                                      (ParserEnd index)))))

(def parse-list (index slice parse-sexps symbols)
     (match (parse-sexps index slice symbols Empty)
            (ParserResult next-index symbols expressions)
                (ParserResult
                    next-index
                    symbols
                    (List expressions (Range (- index 1) next-index)))
            (ParserError error)
                (ParserError error)
            (ParserEnd index)
                (ParserEnd index)))

(def parse-expression (depth index slice parse-sexps' symbols)
     (match (< index (slice-size slice))
            False
                (match depth
                       0
                           (ParserEnd index)
                       _
                           (ParserError ParseErrorTooFewClosingBrackets))
            True
                (match (slice-get slice index)
                       40
                           (parse-list (+ index 1) slice (parse-sexps' (+ depth 1)) symbols)
                       41
                           (match depth
                                  0
                                      (ParserError ParseErrorTooManyClosingBrackets)
                                  _
                                      (ParserEnd (+ index 1)))
                       x
                           (match (whitespace? x)
                                  True
                                      (parse-expression depth (+ index 1) slice parse-sexps' symbols)
                                  False
                                      (parse-symbol index slice symbols)))))

(def parse-sexps' (depth index slice symbols expressions)
     (match (parse-expression depth index slice parse-sexps' symbols)
            (ParserResult index symbols expression)
                (parse-sexps' depth index slice symbols (Cons expression expressions))
            (ParserError error)
                (ParserError error)
            (ParserEnd index)
                (ParserResult index symbols (list-reverse expressions))))

(pub def parse-sexps (symbols slice)
     (match (parse-sexps' 0 0 slice symbols Empty)
            (ParserResult _ symbols expressions)
                (Result (Pair symbols expressions))
            (ParserError error)
                (Error error)
            (ParserEnd _)
                (Error ParseErrorTooFewClosingBrackets)))

(pub def wrap-in-brackets (string)
     (string-concat (string-of-char 40) (string-concat string (string-of-char 41))))

(def stringify-sexp' (stringify-sexps expression)
     (match expression
            (Symbol _ name __)
                name
            (Integer integer _)
                (string-from-int32 integer)
            (List expressions _)
                (wrap-in-brackets (stringify-sexps expressions))))

(pub def stringify-sexps (expressions)
     (string-join
         (string-of-char 32)
         (list-map (stringify-sexp' stringify-sexps) expressions)))

(pub def stringify-sexp (expression)
     (stringify-sexp' stringify-sexps expression))
