
(typ (state s v) (Operation (fn (s) (pair s v))))

(def state-run (state operation)
     (match operation
            (Operation f)  (f state)))

(def state-final-value (initial-state operation)
     (match (state-run initial-state operation)
            (Pair _ value)  value))

(def state-lift (value)
     (Operation (fn (state)
                    (Pair state value))))

(def state-flatmap-with-state (f operation)
     (Operation (fn (state)
                    (match (state-run state operation)
                           (Pair new-state new-value)  (state-run new-state (f new-state new-value))))))

(def state-modify (f operation)
     (state-flatmap-with-state (fn (state value)
                                   (Operation (fn (_)
                                                  (Pair (f state) value))))
                               operation))

(def state-flatmap (f operation)
     (state-flatmap-with-state (fn (_ value) (f value)) operation))

(def state-map-with-state (f operation)
     (state-flatmap-with-state (fn (state value) (state-lift (f state value))) operation))

(def state-map (f operation)
     (state-flatmap (pipe f state-lift) operation))

(def state-put (state operation)
     (state-modify (fn (_) state) operation))

(def state-get (operation)
     (state-flatmap-with-state (fn (state _) (state-lift state)) operation))

(def state-gets (f operation)
     (state-flatmap (pipe f state-lift) (state-get operation)))

(def state-foldl (f initial-operation operations)
     (list-foldl (fn (operation chain)
                     (state-flatmap (fn (x)
                     (state-map     (fn (xs)
                                        (f x xs))
                                    chain))
                                    operation))
                 (state-lift initial-operation)
                 operations))

(def state-foldr (f initial-operation operations)
     (list-foldr (fn (operation chain)
                     (state-flatmap (fn (x)
                     (state-map     (fn (xs)
                                        (f x xs))
                                    chain))
                                    operation))
                 (state-lift initial-operation)
                 operations))

(def state-foreach (f xs)
     (state-foldr list-cons Empty (list-map f xs)))
