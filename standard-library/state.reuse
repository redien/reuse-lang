
(pub typ (state s v) (Operation (fn (s) (trampoline (pair s v)))))

(def state-run-internal (state operation)
     (match operation
            (Operation f)
                (f state)))

(pub def state-run (state operation)
     (trampoline-run (state-run-internal state operation)))

(pub def state-final-value (initial-state operation)
     (match (trampoline-run (state-run-internal initial-state operation))
            (Pair _ value)
                value))

(pub def state-return (value)
     (Operation (fn (state)
         (trampoline-return (Pair state value)))))

(pub def state-bind (operation f)
     (Operation (fn (state)
         (trampoline-yield (fn ()
             (trampoline-bind (state-run-internal state operation) (fn (v)
             (match v
                    (Pair state value)
                        (trampoline-yield (fn ()
                            (state-run-internal state (f value))))))))))))

(pub def state-get ()
     (Operation (fn (state)
         (trampoline-return (Pair state state)))))

(pub def state-set (state)
     (Operation (fn (_)
         (trampoline-return (Pair state state)))))

(pub def state-modify (f)
     (state-bind (state-get) (fn (state)
     (state-set (f state)))))

(pub def state-let (value f)
     (state-bind (state-return value) f))

(pub def state-foldr (f initial-value operations)
     (list-foldr
         (fn (operation chain)
             (state-bind operation (fn (x)
             (state-bind chain (fn (xs)
             (state-return (f x xs)))))))
         (state-return initial-value)
         operations))

(pub def state-foreach (f xs)
     (state-foldr list-cons Empty (list-map f xs)))

(pub def state-flatmap (f operation)
     (state-bind operation f))

(pub def state-map (f operation)
     (state-flatmap (. state-return f) operation))

(pub def state-lift (value)
     (state-return value))
