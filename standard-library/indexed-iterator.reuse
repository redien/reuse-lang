
(typ (indexed-iterator (exists collection) element)
     (IndexedIterator collection
                      int32
                      (fn (collection int32) (maybe element))
                      (fn ((indexed-iterator element) collection int32) (indexed-iterator element))))

(def indexed-iterator-next (iterator)
     (match iterator
            (IndexedIterator collection index _ next)  (next iterator collection index)))

(def indexed-iterator-get (iterator)
     (match iterator
            (IndexedIterator collection index get _)  (get collection index)))

(def indexed-iterator-index (iterator)
     (match iterator
            (IndexedIterator _ index __ ___)  index))

(def indexed-iterator-from-next' (iterator _ __)
     (match iterator
            (IndexedIterator s i get next) (IndexedIterator s (+ i 1) get next)))

(def indexed-iterator-from (collection get)
     (IndexedIterator collection 0 get indexed-iterator-from-next'))
