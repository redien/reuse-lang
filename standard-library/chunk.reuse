
(typ (chunk m value) (Chunk m (fn (m) int32)
                              (fn (int32 m) value)
                              (fn (int32 int32 m) (chunk m value))
                              (fn (m m) boolean)))

(def chunk-size (chunk)
     (match chunk
            (Chunk m size _ __ ___)   (size m)))

(def chunk-get (index chunk)
     (match chunk
            (Chunk m _ get __ ___)    (get index m)))

(def chunk-slice (offset size chunk)
     (match chunk
            (Chunk m _ __ slice ___)  (slice offset size m)))

(def chunk-equal? (chunk other)
     (match (chunk)
            (Chunk a _ __ ___ equal?)
     (match (other)
            (Chunk b _ __ ___ ____)
                (equal? a b))))


(def chunk-foldl' (f accumulator index size chunk)
     (match (< index size)
            True   (chunk-foldl' f (f (chunk-get index chunk) accumulator) (+ index 1) size chunk)
            False  accumulator))

(def chunk-foldl (f initial chunk)
     (chunk-foldl' f initial 0 (chunk-size chunk) chunk))

(def chunk-indexed-iterator-get (chunk index)
     (match (>= index (chunk-size chunk))
            True  None
            False (Some (chunk-get index chunk))))

(def chunk-indexed-iterator-next (iterator chunk index)
     (IndexedIterator chunk (+ index 1) chunk-indexed-iterator-get chunk-indexed-iterator-next))

(def chunk-to-indexed-iterator (chunk)
     (IndexedIterator chunk 0 chunk-indexed-iterator-get chunk-indexed-iterator-next))
