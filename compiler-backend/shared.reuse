
(pub def identifier-+ ()                 0)
(pub def identifier-- ()                 1)
(pub def identifier-* ()                 2)
(pub def identifier-/ ()                 3)
(pub def identifier-% ()                 4)
(pub def identifier-& ()                 5)
(pub def identifier-int32-less-than ()   6)
(pub def identifier-list ()              7)
(pub def identifier-pipe ()              8)
(pub def identifier-slice-empty ()       9)
(pub def identifier-slice-of ()          10)
(pub def identifier-slice-size ()        11)
(pub def identifier-slice-get ()         12)
(pub def identifier-slice-concat ()      13)
(pub def identifier-slice-foldl ()       14)
(pub def identifier-slice-subslice ()    15)
(pub def identifier-int32 ()             16)
(pub def identifier-slice ()             17)

(pub def intrinsic-identifiers ()
     (list (Pair (identifier-+) (data-+)) (Pair (identifier--) (data--)) (Pair (identifier-*) (data-*))
           (Pair (identifier-/) (data-/)) (Pair (identifier-%) (data-%)) (Pair (identifier-&) (data-&))
           (Pair (identifier-int32-less-than) (data-int32-less-than))
           (Pair (identifier-list) (data-list)) (Pair (identifier-pipe) (data-pipe))
           (Pair (identifier-slice-empty) (data-slice-empty)) (Pair (identifier-slice-foldl) (data-slice-foldl))
           (Pair (identifier-slice-of) (data-slice-of)) (Pair (identifier-slice-size) (data-slice-size))
           (Pair (identifier-slice-get) (data-slice-get)) (Pair (identifier-slice-concat) (data-slice-concat))
           (Pair (identifier-slice-subslice) (data-slice-subslice))
           (Pair (identifier-int32) (data-int32)) (Pair (identifier-slice) (data-slice))))

(pub def token-is-operator? (token)
     (and (>= token 0) (<= token 5)))

(pub def join' (strings)
         (source-string-join (string-empty) strings))

(pub def wrap-in-brackets' (string)
         (source-string-concat (SourceStringChar 40)
         (source-string-concat string
                               (SourceStringChar 41))))
