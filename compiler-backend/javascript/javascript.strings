compile-error       |*compile error*
javascript-language |javascript
preamble-filename   |preamble.js
pervasives-filename |pervasives.js
int32-plus          |int32_add
int32-multiply      |int32_mul
int32-minus         |int32_sub
int32-divide        |int32_div
int32-modulus       |int32_mod
int32-and           |int32_and
slice               |slice
trampoline          |_trampoline
return-value-marker |_k:
tailcall            |_tailcall
var                 |var
return              |return
function            |function
import              |import
default             |default
case                |case
break               |break
const               |const
continue            |continue
catch               |catch
debugger            |debugger
delete              |delete
export              |export
extends             |extends
enum                |enum
finally             |finally
instanceof          |instanceof
null                |null
super               |super
switch              |switch
this                |this
throw               |throw
typeof              |typeof
void                |void
await               |await
module              |module
end-statement       |;
equals              |=
empty-object        |{}
open-bracket        |(
close-bracket       |)
open-block          |{
close-block         |}
open-array          |[
close-array         |]
comma               |,
match-func          |_match
capture             |$
question-mark       |?
colon               |:
lambda-arrow        | => 
single-quote        |'
dot                 |.
double-quote        |"
exports             |exports
module.exports.     |module.exports.
};                  |};
tap-version         |console.log('TAP version 13');
line-comment-start  |console.log("# 
line-comment-end    |");
test-assertion      |var passed = 0; var failed = 0; var $assert = (expr, a, b) => { if (a !== b) { console.log('not ok ' + (passed + failed) + " - expected '" + expr + "' to equal '" + b + "' but got '" + a + "'"); failed++; } else { console.log("ok " + (passed + failed) + " - " + expr + " = " + b); passed++; }};
test-case           |test_case_
assertion-call      |$assert
test-end            |console.log('1..' + (passed+failed)); console.log('# tests ' + (passed+failed)); console.log('# pass ' + passed); console.log('# fail ' + failed); if (failed !== 0) { process.exit(-1); }