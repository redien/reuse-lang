#!/usr/bin/env bash

set -e

REUSE_SOURCE=""
REUSE_OUTPUT=""
REUSE_LANGUAGE="ocaml"
REUSE_MINIMAL=false
export REUSE_MINIMAL
REUSE_NOSTDLIB=false

LANGUAGES="ocaml or minimal"

usage() {
    echo Usage: $(basename $0) [flags] --output [OUTPUT FILE] [FILE]... >&2
    echo >&2
    echo Compiler for the Reuse programming language>&2
    echo >&2
    echo "       --minimal          Compile as Minimal Reuse" >&2
    echo "       --nostdlib         Do not include the standard library" >&2
    echo "       --language [LANG]  Target language to compile to." >&2
    echo "                          Can be $LANGUAGES." >&2
    echo "       --output [FILE]    Write output to FILE" >&2
}

throw_error() {
    echo $(basename $0): $@ >&2
    echo >&2
    usage
    exit 1
}

while [[ $# -gt 0 ]]
do
    arg="$1"

    case $arg in
        --minimal)
            REUSE_MINIMAL=true
            shift
        ;;
        --nostdlib)
            REUSE_NOSTDLIB=true
            shift
        ;;
        --output)
            REUSE_OUTPUT="$2"
            shift
            shift
        ;;
        --language)
            REUSE_LANGUAGE="$2"
            shift
            shift
        ;;
        --*)
            throw_error Unrecognized flag $arg
        ;;
        *)
            REUSE_SOURCE="$REUSE_SOURCE
$(cat $arg)"
            shift
        ;;
    esac
done

case $REUSE_LANGUAGE in
    ocaml) ;;
    minimal) ;;
    *)
        throw_error Unknown language $REUSE_LANGUAGE. Can be $LANGUAGES.
    ;;
esac

if [ "$REUSE_OUTPUT" == "" ]; then
    throw_error No output file specified, please use the --output [file] flag.
fi

if [ "$(uname)" = "Darwin" ] ; then
    root_path=$(dirname $(greadlink -f "$0"))
else
    root_path=$(dirname $(readlink -f "$0"))
fi

if [ "$REUSE_NOSTDLIB" == "false" ]; then
    REUSE_SOURCE="$(cat $root_path/generated/standard-library.reuse)
$REUSE_SOURCE"
fi

echo "$REUSE_SOURCE" | $root_path/bin/reuse-$REUSE_LANGUAGE > $REUSE_OUTPUT
