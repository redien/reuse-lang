#!/usr/bin/env bash

set -e

REUSE_SOURCE_FILES=""
REUSE_ARGS=""
REUSE_LANGUAGE="ocaml"

LANGUAGES="ocaml, haskell or minimal"

usage() {
    echo Usage: $(basename $0) [flags] --output [OUTPUT FILE] [FILE]... >&2
    echo >&2
    echo Compiler for the Reuse programming language>&2
    echo >&2
    echo "       --minimal          Source language should be treated as Minimal Reuse" >&2
    echo "       --nostdlib         Do not include the standard library" >&2
    echo "       --language [LANG]  Target language to compile to." >&2
    echo "                          Can be $LANGUAGES." >&2
    echo "       --output [FILE]    Write output to FILE" >&2
}

throw_error() {
    echo $(basename $0): $@ >&2
    echo >&2
    usage
    exit 1
}

if [ "$(uname)" = "Darwin" ] ; then
    root_path=$(dirname $(greadlink -f "$0"))
else
    root_path=$(dirname $(readlink -f "$0"))
fi

while [[ $# -gt 0 ]]
do
    arg="$1"

    case $arg in
        --minimal)
            REUSE_ARGS="$REUSE_ARGS --minimal true"
            shift
        ;;
        --nostdlib)
            REUSE_ARGS="$REUSE_ARGS --stdlib false"
            shift
        ;;
        --output)
            REUSE_ARGS="$REUSE_ARGS --output $2"
            shift
            shift
        ;;
        --language)
            REUSE_LANGUAGE="$2"
            shift
            shift
        ;;
        --*)
            throw_error Unrecognized flag $arg
        ;;
        *)
            REUSE_SOURCE_FILES="$arg $REUSE_SOURCE_FILES"
            shift
        ;;
    esac
done

case $REUSE_LANGUAGE in
    ocaml) ;;
    haskell) ;;
    minimal) ;;
    *)
        throw_error Unknown language $REUSE_LANGUAGE. Can be $LANGUAGES.
    ;;
esac


$root_path/bin/reuse-$REUSE_LANGUAGE $REUSE_ARGS $REUSE_SOURCE_FILES
