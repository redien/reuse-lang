
(def identifier-def ()              -1)
(def identifier-typ ()              -2)
(def identifier-fn ()               -3)
(def identifier-match ()            -4)
(def identifier-exists ()           -5)
(def identifier-pub ()              -6)

(pub def identifier-+ ()                 0)
(pub def identifier-- ()                 1)
(pub def identifier-* ()                 2)
(pub def identifier-/ ()                 3)
(pub def identifier-% ()                 4)
(pub def identifier-& ()                 5)
(pub def identifier-int32-less-than ()   6)
(pub def identifier-list ()              7)
(pub def identifier-pipe ()              8)
(pub def default-symbol-count ()  9)

(def intrinsic-identifiers ()
     (list (Pair (identifier-+) (data-+)) (Pair (identifier--) (data--)) (Pair (identifier-*) (data-*))
           (Pair (identifier-/) (data-/)) (Pair (identifier-%) (data-%)) (Pair (identifier-&) (data-&))
           (Pair (identifier-int32-less-than) (data-int32-less-than))
           (Pair (identifier-list) (data-list)) (Pair (identifier-pipe) (data-pipe))))

(def default-symbol-table ()
     (symbol-table-bind-list (list-map pair-right (intrinsic-identifiers)) (symbol-table-empty)))

(def default-scope ()
     (parser-scope-set-list (list-map (. (fn (x) (Pair x x)) pair-left) (intrinsic-identifiers)) (parser-scope-empty)))

(pub def default-identifiers ()
     (dictionary-set (data-def)    (Pair (identifier-def) (data-def))
     (dictionary-set (data-typ)    (Pair (identifier-typ) (data-typ))
     (dictionary-set (data-fn)     (Pair (identifier-fn) (data-fn))
     (dictionary-set (data-match)  (Pair (identifier-match) (data-match))
     (dictionary-set (data-exists) (Pair (identifier-pub) (data-exists))
     (dictionary-set (data-pub)    (Pair (identifier-pub) (data-pub))
     (dictionary-of (list-map (fn (pair) (Pair (pair-right pair) pair)) (intrinsic-identifiers))))))))))

(pub def token-is-operator? (token)
     (and (>= token 0) (<= token 5)))
