
(def stringify-error (error)
     (match error
            (InternalParserError _ __)
                (data-InternalParserError)
            (MalformedExpressionError _ __)
                (data-MalformedExpressionError)
            (MalformedDefinitionError _ __)
                (data-MalformedDefinitionError)
            (MalformedTypeDefinitionError _ __)
                (data-MalformedTypeDefinitionError)
            (TypeDefinitionMissingName _ __)
                (data-TypeDefinitionMissingName)
            (TypeDefinitionMissingConstructors _ __)
                (data-TypeDefinitionMissingConstructors)
            (MalformedFunctionDefinitionError _ __)
                (data-MalformedFunctionDefinitionError)
            (FunctionDefinitionMissingName _ __)
                (data-FunctionDefinitionMissingName)
            (MalformedPatternError _ __)
                (data-MalformedPatternError)
            (MalformedMatchExpressionError _ __)
                (data-MalformedMatchExpressionError)
            (MalformedSymbolError _ __)
                (data-MalformedSymbolError)
            (MalformedConstructorError _ __)
                (data-MalformedConstructorError)
            (MalformedTypeError _ __)
                (data-MalformedTypeError)
            (ErrorNotDefined name __ ___)
                (string-concat (data-ErrorNotDefined) name)
            (ErrorNotAccessible name __ ___)
                (string-concat (data-ErrorNotAccessible) name)
            (ErrorAlreadyDefined _ __ ___)
                (data-ErrorAlreadyDefined)
            (ErrorReservedIdentifier _ __ ___)
                (data-ErrorReservedIdentifier)
            MalformedSexpTooFewClosingBrackets
                (data-MalformedSexpTooFewClosingBrackets)
            MalformedSexpTooManyClosingBrackets
                (data-MalformedSexpTooManyClosingBrackets)))

(def reuse-main (stdin)
     (pipe
         stdin
         (fn (stdin)
             (list (SourceFile (SourceReference -1 (data-test-file-path) ModuleSelf) stdin)))
         parse-source-files
         (result-map pair-right)
         (result-bimap (. stringify-sexps definitions-to-sexps) stringify-error)))
