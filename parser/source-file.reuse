
(pub typ module-reference
     (ModulePath string boolean)
     ModuleSelf
     ModuleInternal)

(pub typ source-reference (SourceReference int32 string module-reference))

(pub typ source-file (SourceFile source-reference slice))

(pub typ source-file-type
     SourceFileTypeReuse
     SourceFileTypeStrings
     SourceFileTypeTargetLanguage)

(pub def module-equal? (a b)
     (match a
            (ModulePath a' _)
                (match b
                       (ModulePath b' _)
                           (string-equal? a' b')
                       _
                           False)
            ModuleSelf
                (match b
                       ModuleSelf
                           True
                       _
                           False)
            ModuleInternal
                (match b
                       ModuleInternal
                           True
                       _
                           False)))

(def source-reference-file-index (source-reference)
     (match source-reference
            (SourceReference file-index _ __)
                file-index))

(pub def source-reference-file-path (source-reference)
     (match source-reference
            (SourceReference _ file-path __)
                file-path))

(pub def source-reference-module (source-reference)
     (match source-reference
            (SourceReference _ __ module)
                module))

(pub def source-reference-equal? (a b)
     (= (source-reference-file-index a) (source-reference-file-index b)))

(pub def source-file-of (module path iterator index)
     (SourceFile (SourceReference index path module) iterator))

(pub def source-file-module (file)
     (match file
            (SourceFile reference _)
                (source-reference-module reference)))

(pub def source-file-path (file)
     (match file
            (SourceFile reference _)
                (source-reference-file-path reference)))

(pub def source-file-content (file)
     (match file
            (SourceFile _ content)
                content))

(pub def source-file-size (file)
     (match file
            (SourceFile _ content)
                (slice-size content)))

(pub def source-file-index (file)
     (match file
            (SourceFile reference _)
                (source-reference-file-index reference)))

(pub def source-file-reference (file)
     (match file
            (SourceFile reference _)
                reference))

(pub def source-file-in-same-module? (a b)
     (module-equal? (source-file-module a) (source-file-module b)))

(def last-n-chars (n path)
     (string-substring (- (string-size path) n) n path))

(def is-reuse-source? (file)
     (string-equal?
         (last-n-chars 6 (source-file-path file))
         (data-reuse-file-ending)))

(def is-strings-source? (file)
     (string-equal?
         (last-n-chars 8 (source-file-path file))
         (data-strings-file-ending)))

(pub def source-file-type (file)
     (match (is-reuse-source? file)
            True
                SourceFileTypeReuse
            False
                (match (is-strings-source? file)
                       True
                           SourceFileTypeStrings
                       False
                           SourceFileTypeTargetLanguage)))
