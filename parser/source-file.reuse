
(pub typ source-file (SourceFile module-reference string slice))

(pub typ source-file-type
     SourceFileTypeReuse
     SourceFileTypeStrings
     SourceFileTypeTargetLanguage)

(pub def source-file-of (module path iterator)
     (SourceFile module path iterator))

(pub def source-file-module (file)
     (match file
            (SourceFile module _ __)
                module))

(pub def source-file-path (file)
     (match file
            (SourceFile _ path __)
                path))

(pub def source-file-content (file)
     (match file
            (SourceFile _ __ content)
                content))

(pub def source-file-size (file)
     (match file
            (SourceFile _ __ content)
                (slice-size content)))

(pub def source-file-in-same-module? (a b)
     (module-equal? (source-file-module a) (source-file-module b)))

(def last-n-chars (n path)
     (string-substring (- (string-size path) n) n path))

(def is-reuse-source? (file)
     (string-equal?
         (last-n-chars 6 (source-file-path file))
         (data-reuse-file-ending)))

(def is-strings-source? (file)
     (string-equal?
         (last-n-chars 8 (source-file-path file))
         (data-strings-file-ending)))

(pub def source-file-type (file)
     (match (is-reuse-source? file)
            True
                SourceFileTypeReuse
            False
                (match (is-strings-source? file)
                       True
                           SourceFileTypeStrings
                       False
                           SourceFileTypeTargetLanguage)))
