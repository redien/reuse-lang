
(typ cli-program (CliTime (fn (int32) cli-program))
                 (CliMaxHeapSize (fn (int32) cli-program))
                 (CliReadFiles (list (pair module-reference string)) (fn ((list source-file)) cli-program))
                 (CliWriteFiles (list (pair string string)) (fn () cli-program))
                 (CliOutput string (fn () cli-program))
                 (CliError string (fn () cli-program))
                 (CliExit int32))

(def flag-is-true? (flag default arguments)
     (match (dictionary-get flag arguments)
            (Some value)  (string-equal? value (data-true))
            None          default))

(def module-name-and-path (open? path)
     (Pair (ModulePath (path-filename-without-extension path) open?) path))

(def standard-library-files (data-path)
     (list (path-join (list data-path (data-standard-library-filename)))
           (path-join (list data-path (data-pervasives-filename)))))

(def modules-from-arguments (data-path arguments)
     ((pipe (list-filter (. (string-equal? (data-module-flag)) pair-left))
            (list-map (. (module-name-and-path False) pair-right))
            (match (flag-is-true? (data-stdlib) True (dictionary-of arguments))
                   True   (list-concat (list-map (module-name-and-path True) (standard-library-files data-path)))
                   False  id))
          arguments))

(def table-to-string (table)
     (string-join (string-of-char 10) (list-map (string-join (data-space)) table)))

(def print-diagnostics (arguments file-entries
                        max-heap-size
                        start-parse end-parse
                        start-transform end-transform
                        start-generate end-generate
                        start-read-files end-read-files
                        start-write-files end-write-files
                        k)
     (match (flag-is-true? (data-diagnostics-flag) False arguments)
            True
               (CliError (table-to-string (list 
                    (list (string-from-int32 (list-foldl (fn (file bytes) (+ bytes (source-file-size file))) 0 file-entries)) (data-bytes-read))
                    (list (string-from-int32 max-heap-size) (data-max-heap-size))
                    (list (string-from-int32 (- end-parse start-parse)) (data-parse-time))
                    (list (string-from-int32 (- end-transform start-transform)) (data-transform-time))
                    (list (string-from-int32 (- end-generate start-generate)) (data-generate-time))
                    (list (string-from-int32 (- end-read-files start-read-files)) (data-read-files))
                    (list (string-from-int32 (- end-write-files start-write-files)) (data-write-files))))
                                 k)
            False
               (k)))

(def cli-main (data-path argv)
     (match (parse-arguments argv)
          (CliArguments _ Empty)
               (CliError (data-no-input-files) (fn ()
               (CliExit 1)))
          (CliErrorMissingValue key)
               (CliError key (fn ()
               (CliExit 1)))
          (CliArguments argument-list input-files)
     (match (dictionary-of argument-list)
            arguments
     (CliTime (fn (start-read-files)
     (CliReadFiles (list-concat (Cons (Pair ModuleSelf (string-concat data-path (data-preamble-filename)))
                                      (modules-from-arguments data-path argument-list))
                                (list-map (pair-cons ModuleSelf) input-files))
                          (fn (file-entries)
     (CliTime (fn (end-read-files)
          (match (dictionary-get (data-output-key) arguments)
               (Some output-path)
                    (match (path-filename-without-extension output-path)
                           module-name
                    (CliTime (fn (start-parse)
                    (match (parse file-entries)
                           definitions
                    (CliTime (fn (end-parse)
                    (CliTime (fn (start-transform)
                    (match (transform definitions)
                           definitions
                    (CliTime (fn (end-transform)
                    (CliTime (fn (start-generate)
                    (match (generate module-name definitions)
                           (Result source)
                              (CliTime (fn (end-generate)
                              (CliTime (fn (start-write-files)
                              (CliWriteFiles (list (Pair output-path source)) (fn ()
                              (CliTime (fn (end-write-files)
                              (CliMaxHeapSize (fn (max-heap-size)
                              (print-diagnostics arguments file-entries
                                                 max-heap-size
                                                 start-parse end-parse
                                                 start-transform end-transform
                                                 start-generate end-generate
                                                 start-read-files end-read-files
                                                 start-write-files end-write-files (fn ()
                              (CliExit 0)))))))))))))
                           (Error error)
                              (CliError (error-to-string file-entries error) (fn ()
                              (CliExit 1)))))))))))))))))
               None
                    (CliError (data-no-output-path) (fn ()
                    (CliExit 1)))))))))))))
