
(def string-format (list)
     (string-join (string-of-char 10) (list-map (string-join (string-empty)) list)))

(def file-matches-reference (source-reference file)
     (pipe
         file
         source-file-path
         (string-equal? (source-reference-file-path source-reference))))

(def find-file-matching (files source-reference)
     (list-find-first (file-matches-reference source-reference) files))

(def range-information (range)
     (match range
            (Range start end)
                (string-join
                    (string-of-char 45)
                    (list (string-from-int32 start) (string-from-int32 end)))))

(def count-lines (index lines source)
     (match (string-index-of index (string-of-char 10) source)
            (Some index)
                (count-lines (+ index 1) (+ lines 1) source)
            None
                (Pair lines (+ (- (string-size source) index) 1))))

(def line-information (file range)
     (match range
            (Range start _)
                (match (string-from-slice (source-file-content file))
                       content
                           (count-lines 0 1 (string-substring 0 start content)))))

(def next-newline (content index)
     (match (string-index-of index (string-of-char 10) content)
            (Some index)
                (+ index 1)
            None
                index))

(def source-paragraph (file range)
     (match range
            (Range start end)
                (match (string-from-slice (source-file-content file))
                       content
                           (match (next-newline content (- start 100))
                                  paragraph-start
                                      (match (- (next-newline content (+ end 50)) paragraph-start)
                                             paragraph-size
                                                 (string-substring paragraph-start paragraph-size content))))))

(def location-information (files source-reference range)
     (match (find-file-matching files source-reference)
            (Some file)
                (match (line-information file range)
                       (Pair lines column)
                           (string-format (list
                               Empty
                               (list (source-paragraph file range))
                               Empty
                               (list (data-Line:) (string-from-int32 lines))
                               (list (data-Column:) (string-from-int32 column))
                               (list (data-Range:) (range-information range))
                               (list (data-File:) (source-file-path file)))))
            None
                (data-no-location-information)))

(pub def error-to-string (files error)
     (match error
            (InternalParserError source-reference range)
                (string-format (list
                    (list (data-internal-error))
                    (list (location-information files source-reference range))))
            (MalformedExpressionError source-reference range)
                (string-format (list
                    (list (data-malformed-expression))
                    (list (location-information files source-reference range))))
            (MalformedDefinitionError source-reference range)
                (string-format (list
                    (list (data-malformed-definition))
                    (list (location-information files source-reference range))))
            (MalformedFunctionDefinitionError source-reference range)
                (string-format (list
                    (list (data-malformed-function-definition))
                    (list (location-information files source-reference range))))
            (FunctionDefinitionMissingName source-reference range)
                (string-format (list
                    (list (data-function-definition-missing-name))
                    (list (location-information files source-reference range))))
            (MalformedTypeDefinitionError source-reference range)
                (string-format (list
                    (list (data-malformed-type-definition))
                    Empty
                    (list (data-malformed-type-definition-ex))
                    (list (location-information files source-reference range))))
            (TypeDefinitionMissingName source-reference range)
                (string-format (list
                    (list (data-type-definition-missing-name))
                    (list (location-information files source-reference range))))
            (TypeDefinitionMissingConstructors source-reference range)
                (string-format (list
                    (list (data-type-definition-missing-constructors))
                    (list (location-information files source-reference range))))
            (MalformedPatternError source-reference range)
                (string-format (list
                    (list (data-malformed-pattern))
                    (list (location-information files source-reference range))))
            (MalformedMatchExpressionError source-reference range)
                (string-format (list
                    (list (data-malformed-match-expression))
                    (list (location-information files source-reference range))))
            (MalformedSymbolError source-reference range)
                (string-format (list
                    (list (data-malformed-symbol))
                    (list (location-information files source-reference range))))
            (MalformedConstructorError source-reference range)
                (string-format (list
                    (list (data-malformed-constructor))
                    (list (location-information files source-reference range))))
            (MalformedTypeError source-reference range)
                (string-format (list
                    (list (data-malformed-type))
                    (list (location-information files source-reference range))))
            (ErrorNotDefined name source-reference range)
                (string-format (list
                    (list (string-concat (data-not-defined-error) name))
                    (list (location-information files source-reference range))))
            (ErrorAlreadyDefined name source-reference range)
                (string-format (list
                    (list (string-concat (data-already-defined-error) name))
                    (list (location-information files source-reference range))))
            (ErrorReservedIdentifier name source-reference range)
                (string-format (list
                    (list (string-concat (data-reserved-identifier-error) name))
                    (list (location-information files source-reference range))))
            MalformedSexpTooFewClosingBrackets
                (string-format (list (list (data-too-few-closing-brackets))))
            MalformedSexpTooManyClosingBrackets
                (string-format (list (list (data-too-many-closing-brackets))))))
