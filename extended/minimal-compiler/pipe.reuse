
(def transform-pipe-compose (expressions range)
     (Lambda (list (data-x))
             (list-foldl (fn (expression composed)
                             (FunctionApplication (list expression composed) range))
                         (Identifier (data-x) range)
                         expressions)
             range))

(def transform-pipe (definition)
     (over-expressions
        (over-function-application
            (fn (expressions range)
                (match (first-expression-is-symbol? (data-pipe) expressions)
                       True   (transform-pipe-compose (list-rest expressions) range)
                       False  (FunctionApplication expressions range))))
        definition))
