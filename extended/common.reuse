
(def join (list) (string-join (string-empty) list))

(def not-empty? (string)
     (not (string-empty? string)))

(def is-alphanumeric (char)
     (or (and (>= char 65) (<= char 90))
     (or (and (>= char 48) (<= char 57))
         (and (>= char 97) (<= char 122)))))

(def escape-char (char)
     (match (is-alphanumeric char)
            True   (string-of-char char)
            False  (string-prepend 95 (string-from-int32 char))))

(def stringify-parse-errors (definitions)
     (list-map (result-map-error error-to-string) definitions))

(def expression-is-symbol? (symbol-name expression)
     (match expression
            (Identifier name __)
                (string-equal? symbol-name name)
            _
                False))

(def first-expression-is-symbol? (symbol-name expressions)
     ((pipe (maybe-map (expression-is-symbol? symbol-name))
            (maybe-else (fn () False)))
        (list-first expressions)))

(def symbol-is-reserved? (name)
     (string-equal? (string-substring 0 3 name) (data-sparkle)))

(def validate-identifier (identifier)
     (match (symbol-is-reserved? identifier)
            True   (result-error (data-error-reserved-identifier))
            False  (result-lift identifier)))

(def validate-reserved-identifiers (definition)
     (result-flatmap (over-definition-expressions (over-identifiers validate-identifier)) definition))
